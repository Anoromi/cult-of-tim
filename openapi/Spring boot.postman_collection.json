{
	"info": {
		"_postman_id": "331b60ca-d533-4e1e-aeb0-20311cedea83",
		"name": "Spring boot",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "19922388"
	},
	"item": [
		{
			"name": "register",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"hehehehe\",\r\n    \"password\": \"Anor_3omihello\",\r\n    \"email\": \"anoromi@ukma.edu.ua\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8000/auth/signup",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"auth",
						"signup"
					]
				}
			},
			"response": []
		},
		{
			"name": "register fail",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"hehehehe\",\r\n    \"password\": \"Anor_3omihello\",\r\n    \"email\": \"anoromi@ukma.edu.ua\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8000/auth/signup",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"auth",
						"signup"
					]
				}
			},
			"response": []
		},
		{
			"name": "get authors",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8000/authors",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"authors"
					]
				}
			},
			"response": []
		},
		{
			"name": "authors by id",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8000/authors",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"authors"
					]
				}
			},
			"response": []
		},
		{
			"name": "books",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8000/authors",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"authors"
					]
				}
			},
			"response": []
		},
		{
			"name": "books by id",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "localhost:8000/books/1",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"books",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add author by open library",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "\"OL5442304A\"",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8000/authors/open-library/OL5442304A",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"authors",
						"open-library",
						"OL5442304A"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Test create author\", () => {\r",
							"    pm.response.to.have.status(201)\r",
							"    let value = pm.response.json()\r",
							"    pm.expect(value.fullName).to.eql(\"Hello\")\r",
							"    pm.expect(value.id).to.not.eql(undefined)\r",
							"    console.log(value.id)\r",
							"    //pm.environment.set('authorId', value.id)\r",
							"    pm.variables.set('authorId', value.id)\r",
							"    pm.globals.set('authorId', value.id)\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"fullName\": \"Hello\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8000/authors",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"authors"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete author",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Test delete author\", () => {\r",
							"    pm.expect(pm.environment.get('authorId')).to.eq(0).not\r",
							"    pm.response.to.have.status(204)\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8000/authors/{{authorId}}",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"authors",
						"{{authorId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "update author",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"fullName\": \"Hello\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8000/authors/2",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"authors",
						"2"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "authorId",
			"value": "0"
		},
		{
			"key": "authorId",
			"value": ""
		}
	]
}